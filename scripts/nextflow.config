// Config inheritance options
params {
    generic_config_base = "https://raw.githubusercontent.com/sanger-pathogens/nextflow-commons/"
    generic_config_version = "master"
    generic_config_url = ""
}
inherit_generic_config()

process {
    executor = 'local'
    containerOptions = '-u $(id -u):$(id -g)'
}

manifest {
    name            = "multiple_mappings_to_bam"
    author          = 'PAM Informatics'
    homePage        = 'https://gitlab.internal.sanger.ac.uk/sanger-pathogens/pipelines/<PROJECT>'
    description     = '<Description>'
    mainScript      = 'main.nf'
    nextflowVersion = '>=21.04.0'
    version         = 'v0.0.1'
}

params {
    // Logging options
    monochrome_logs = false
    
    // Output options
    outdir = "./results"

    //mm2b options
    mapfiles = ""
    ref = ""
    program = "BWA"
    domapping = true
    human = false
    pairedend = true
    maxinsertsize = 1000
    mininsertsize = 50
    ssahaquality = 30
    maprepeats = false
    nomapid = 0
    GATK = true
    markdup = true
    detectOverlaps = false
    pseudosequence = true
    incref = true
    indels = true
    quality = 50
    mapq = 20
    depth = 8
    stranddepth = 3
    anomolous = true
    BAQ = true
    circular = true
    ratio = 0.8
    prior = 0.001
    call = "c"
    embl = ""
    output = " "
    diroutput = ""
    force = false
    filter = 1
    tabfile = false
    alnfile = false
    raxml = false
    model = "GTRGAMMA"
    bootstrap = 100
    keep = false
    LSF = true
    LSFQ = "normal"
    mem = 5
    nodes = 20
    dirty = false
    outdir = "results"
    nfile = "optional_file.txt"
}

// Helper functions
def inherit_generic_config() {
    config_url = params.generic_config_url ? params.generic_config_url : "${params.generic_config_base}/${params.generic_config_version}/configs/nextflow.config"
    try {
        includeConfig "${config_url}"
    } catch (Exception e) {
        System.err.println("ERROR: Could not load generic config: ${config_url}")
        System.err.println("Encountered the following exception:")
        throw e
    }
}